{
    "patches": [
        {
            "label": "2025-09-30_01-54-12",
            "content": "@@ -2362,16 +2362,21 @@\n ageiro:%7B\n+self.\n passagei\n@@ -2390,16 +2390,21 @@\n solina:%7B\n+self.\n gasolina\n@@ -2410,16 +2410,21 @@\n a%7D, km:%7B\n+self.\n km%7D)%0A%0A%0A%0A\n",
            "lines": "74"
        },
        {
            "label": "2025-09-30_01-54-35",
            "content": "@@ -2349,22 +2349,17 @@\n eturn f%22\n-%7Bself.\n+(\n passagei\n@@ -2364,24 +2364,31 @@\n eiro\n-%7D\n :%7B\n-self.\n+passageiro%7D, \n gasolina\n %7D:%7Bs\n@@ -2387,21 +2387,29 @@\n lina\n-%7D\n :%7B\n-self.km%7D%22%0A\n+gasolina%7D, km:%7Bkm%7D)\n %0A%0A%0A%0A\n",
            "lines": "74"
        },
        {
            "label": "2025-09-30_01-55-55",
            "content": "@@ -2408,17 +2408,16 @@\n f main()\n-:\n %0A%0A    ca\n",
            "lines": "75"
        },
        {
            "label": "2025-09-30_01-56-22",
            "content": "@@ -2564,16 +2564,62 @@\n gs%5B0%5D ==\n+ %22end%22%0A        break %0A%0A        elif args%5B0%5D ==\n  %22show%22:\n",
            "lines": "75"
        },
        {
            "label": "2025-09-30_01-56-44",
            "content": "@@ -2551,18 +2551,16 @@\n         \n-el\n if args%5B\n",
            "lines": "72"
        },
        {
            "label": "2025-09-30_01-56-55",
            "content": "@@ -2575,16 +2575,24 @@\n %22show%22: \n+#Mostrar\n %0A       \n",
            "lines": "72"
        },
        {
            "label": "2025-09-30_01-57-06",
            "content": "@@ -2353,14 +2353,8 @@\n n f%22\n-pass: \n %7Bsel\n@@ -2370,15 +2370,9 @@\n iro%7D\n-, gas: \n+:\n %7Bsel\n@@ -2382,22 +2382,17 @@\n asolina%7D\n-, km: \n+:\n %7Bself.km\n",
            "lines": "72"
        },
        {
            "label": "2025-09-30_01-57-57",
            "content": "@@ -1,2670 +1,105 @@\n-#Nesta atividade, vamos implementar um carro ecol%C3%B3gico. Ele deve ser capaz de embarcar e desembarcar pessoas, abastecer e andar.%0A%0A#- O carro deve ser inicializado com o tanque vazio, sem ningu%C3%A9m dentro e com 0 quil%C3%B4metros percorridos.%0A# Suporta at%C3%A9 2 pessoas e at%C3%A9 100 litros de combust%C3%ADvel.%0A%0A#- Construtor do Carro%0A#  - %60pass%60: 0 passageiros. %0A#  - %60km%60: 0 quil%C3%B4metros percorridos.%0A#  - %60passMax%60: M%C3%A1ximo de 2 pessoas.%0A#  - %60gas%60: 0 litros de gasolina.%0A#  - %60gasMax%60: M%C3%A1ximo de 100 litros de gasolina.%0A#  - Mostrar %60$show%60%0A# - Imprime a chamada do m%C3%A9todo %60toString%60 do carro.%0A#  - %60toString%60 - Retorna uma string com o estado atual do carro no formato:%0A#  - %60%22pass:%7Bpass%7D, gas:%7Bgas%7D, km:%7Bkm%7D%22%60.%0A# - Entrar %60$enter%60%0A # - Embarca uma pessoa por vez, mas n%C3%A3o al%C3%A9m do m%C3%A1ximo.%0A#  - Se o carro estiver lotado, emite a mensagem de erro.%0A#    - %60fail: limite de pessoas atingido%60.%0A#- Sair %60$leave%60%0A#  - Desembarca uma pessoa por vez.%0A#  - Se n%C3%A3o houver ningu%C3%A9m no carro, emite a mensagem de erro.%0A#    - %60fail: nao ha ninguem no carro%60.%0A#- Abastecer certa quantidade %60$fuel increment%60%0A#  - Abastece o tanque com a quantidade de litros de combust%C3%ADvel passada.%0A#  - Caso tente abastecer acima do limite, descarta o valor excedente.%0A#- Dirigir certa dist%C3%A2ncia %60$drive distance%60%0A#  - Para dirigir, o carro consome combust%C3%ADvel e aumenta a quilometragem.%0A#  - S%C3%B3 pode dirigir se houver combust%C3%ADvel e se houver algu%C3%A9m no carro.%0A#  - Caso n%C3%A3o haja ningu%C3%A9m no carro, emite a mensagem de erro.%0A#    - %60fail: n%C3%A3o h%C3%A1 ningu%C3%A9m no carro%60%0A#  - Caso n%C3%A3o haja combust%C3%ADvel, emite a mensagem de erro.%0A#    - %60fail: tanque vazio%60%0A#  - Caso n%C3%A3o exista combust%C3%ADvel suficiente para completar a viagem inteira, dirija o m%C3%A1ximo poss%C3%ADvel e emite uma mensagem indicando quanto foi percorrido%0A#    - %60fail: tanque vazio ap%C3%B3s andar %7Bdistancia%7D km%60.%0A%0A%0Aclass Carro:%0A    def __init__(self, passageiros: str, km: str):%0A        self.passageiros: str = 0%0A        self.km: str = 0%0A        self.gasolina: str = 0%0A%0A    def passMax(self, limite):%0A        self.passageiro += limite %0A        if self.passageiro == 2:%0A            self.passageiro == 2%0A            print (%22fail: limite de pessoas atingido%22)%0A        %0A    def gasMax (self, maximo):%0A        self.gasolina += maximo%0A        if self.gasolina == 100:%0A            self.gasolina == 100%0A            print ()%0A%0A    def __str__(self):%0A        return f%22pass: %7Bself.passageiro%7D, gas: %7Bself.gasolina%7D, km: %7Bself.km%7D%22%0A%0A%0A%0A%0Adef main():%0A%0A    carro = Carro(%22 %22, %22 %22)%0A    while True:%0A        line: str = input()%0A        print(%22$%22 + line )%0A        args = line. split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22show%22: %0A        print(carro)%0A\n+@@ -2564,56 +2564,8 @@%0A %2522)%250A%250A%0A-        if args%255B0%255D == %2522end%2522:%250A            break%250A%250A%0A     \n %0A\n",
            "lines": "4"
        },
        {
            "label": "2025-09-30_01-58-30",
            "content": "@@ -2445,17 +2445,16 @@\n  = Carro\n- \n (%22 %22, %22 \n@@ -2524,16 +2524,17 @@\n %22 + line\n+ \n )%0A      \n@@ -2547,16 +2547,17 @@\n  = line.\n+ \n split(%22 \n",
            "lines": "75"
        },
        {
            "label": "2025-09-30_01-59-05",
            "content": "@@ -1895,16 +1895,21 @@\n sageiros\n+: str\n  = 0%0A   \n@@ -1920,16 +1920,21 @@\n  self.km\n+: str\n  = 0%0A   \n@@ -1951,16 +1951,21 @@\n gasolina\n+: str\n  = 0%0A%0A  \n@@ -2016,17 +2016,16 @@\n ssageiro\n-s\n  += limi\n@@ -2050,25 +2050,24 @@\n f.passageiro\n-s\n  == 2:%0A     \n@@ -2088,17 +2088,16 @@\n ssageiro\n-s\n  == 2%0A  \n@@ -2286,16 +2286,37 @@\n a == 100\n+%0A            print ()\n %0A%0A    de\n@@ -2354,16 +2354,17 @@\n  f%22pass:\n+ \n %7Bself.pa\n@@ -2371,24 +2371,24 @@\n ssageiro\n-s\n %7D, gas:\n+ \n %7Bself.ga\n@@ -2399,16 +2399,17 @@\n na%7D, km:\n+ \n %7Bself.km\n",
            "lines": "75"
        },
        {
            "label": "2025-09-30_02-05-00",
            "content": "@@ -2609,28 +2609,24 @@\n %22: %0A        \n-    \n print(carro)\n",
            "lines": "74"
        },
        {
            "label": "2025-09-30_02-05-26",
            "content": "@@ -1837,24 +1837,51 @@\n _init__(self\n+, passageiros: str, km: str\n ):%0A        s\n@@ -2042,17 +2042,17 @@\n ageiros \n-%3E\n+=\n = 2:%0A   \n@@ -2078,16 +2078,17 @@\n geiros =\n+=\n  2%0A     \n@@ -2091,32 +2091,33 @@\n            print\n+ \n (%22fail: limite d\n@@ -2156,24 +2156,25 @@\n   def gasMax\n+ \n (self, maxim\n@@ -2238,9 +2238,9 @@\n ina \n-%3E\n+=\n = 10\n@@ -2273,52 +2273,13 @@\n na =\n+=\n  100\n-%0A            print(%22fail: tanque cheio%22)\n %0A%0A  \n@@ -2378,16 +2378,18 @@\n .km%7D%22%0A%0A%0A\n+%0A%0A\n def main\n@@ -2392,16 +2392,17 @@\n main():%0A\n+%0A\n     carr\n@@ -2410,17 +2410,26 @@\n  = Carro\n-(\n+ (%22 %22, %22 %22\n )%0A    wh\n@@ -2450,16 +2450,21 @@\n     line\n+: str\n  = input\n@@ -2571,16 +2571,17 @@\n   break%0A\n+%0A\n         \n@@ -2635,13 +2635,4 @@\n o)%0A%0A\n-main()%0A%0A%0A\n",
            "lines": "74"
        },
        {
            "label": "2025-09-30_02-06-05",
            "content": "@@ -2330,17 +2330,16 @@\n  f%22pass:\n- \n %7Bself.pa\n@@ -2354,17 +2354,16 @@\n s%7D, gas:\n- \n %7Bself.ga\n@@ -2374,17 +2374,16 @@\n na%7D, km:\n- \n %7Bself.km\n",
            "lines": "74"
        },
        {
            "label": "2025-09-30_02-06-23",
            "content": "@@ -2015,17 +2015,17 @@\n ageiros \n-=\n+%3E\n = 2:%0A   \n",
            "lines": "74"
        },
        {
            "label": "2025-09-30_02-06-54",
            "content": "@@ -2015,17 +2015,17 @@\n ageiros \n-+\n+=\n = 2:%0A   \n",
            "lines": "74"
        },
        {
            "label": "2025-09-30_02-07-08",
            "content": "@@ -2015,17 +2015,17 @@\n ageiros \n-=\n++\n = 2:%0A   \n",
            "lines": "74"
        },
        {
            "label": "2025-09-30_02-07-18",
            "content": "@@ -2015,17 +2015,18 @@\n ageiros \n-%3E\n+==\n  2:%0A    \n",
            "lines": "74"
        },
        {
            "label": "2025-09-30_02-09-02",
            "content": "@@ -1985,16 +1985,17 @@\n = limite\n+ \n %0A       \n@@ -2023,29 +2023,8 @@\n %3E 2:\n-   # agora trava no 2\n %0A   \n@@ -2204,16 +2204,17 @@\n solina %3E\n+=\n  100:%0A  \n@@ -2631,8 +2631,10 @@\n %0Amain()%0A\n+%0A%0A\n",
            "lines": "74"
        },
        {
            "label": "2025-09-30_02-09-32",
            "content": "@@ -1864,16 +1864,20 @@\n .passage\n+iros\n  = 0%0A   \n@@ -2018,14 +2018,33 @@\n ros \n-==\n+%3E\n  2: \n+  # agora trava no 2\n %0A   \n",
            "lines": "72"
        },
        {
            "label": "2025-09-30_02-16-28",
            "content": "@@ -1864,20 +1864,16 @@\n .passage\n-iros\n  = 0%0A   \n@@ -2014,14 +2014,14 @@\n ros \n-%3E\n+==\n  2: \n- \n %0A   \n",
            "lines": "72"
        },
        {
            "label": "2025-09-30_02-16-41",
            "content": "@@ -2331,16 +2331,21 @@\n %22pass: %7B\n+self.\n passagei\n",
            "lines": "72"
        },
        {
            "label": "2025-09-30_02-16-57",
            "content": "@@ -1923,87 +1923,37 @@\n = 0%0A\n-        self.passMax = 2%0A        self.gasMax = 100%0A%0A    def enter(self, passMax\n+%0A    def passMax(self, limite\n ):%0A \n@@ -1980,18 +1980,17 @@\n ros \n-%3C passMax:\n++= limite\n %0A   \n@@ -2018,12 +2018,14 @@\n ros \n-+= 1\n+%3E 2:  \n %0A   \n@@ -2331,21 +2331,16 @@\n %22pass: %7B\n-self.\n passagei\n",
            "lines": "72"
        },
        {
            "label": "2025-09-30_02-26-39",
            "content": "@@ -2035,16 +2035,17 @@\n  passMax\n+:\n %0A       \n",
            "lines": "74"
        },
        {
            "label": "2025-09-30_02-26-56",
            "content": "@@ -1936,42 +1936,74 @@\n elf.\n-gasM%0A%0A    def passMax(self, limite\n+passMax = 2%0A        self.gasMax = 100%0A%0A    def enter(self, passMax\n ):%0A \n@@ -2030,17 +2030,17 @@\n ros \n-+= limite\n+%3C passMax\n %0A   \n@@ -2068,14 +2068,12 @@\n ros \n-%3E 2:  \n++= 1\n %0A   \n",
            "lines": "74"
        },
        {
            "label": "2025-09-30_02-27-40",
            "content": "@@ -1936,18 +1936,16 @@\n elf.gasM\n-ax\n %0A%0A    de\n",
            "lines": "73"
        },
        {
            "label": "2025-09-30_02-27-53",
            "content": "@@ -1865,17 +1865,19 @@\n pass\n-_ = 0    \n+ageiros = 0\n %0A   \n@@ -1890,23 +1890,14 @@\n elf.\n-passMax = 2    \n+km = 0\n %0A   \n@@ -1909,28 +1909,25 @@\n self.gas\n- = 0        \n+olina = 0\n %0A       \n@@ -1942,66 +1942,75 @@\n sMax\n- = 100  %0A        self.km = 0        %0A%0A    def enter(self):\n+%0A%0A    def passMax(self, limite):%0A        self.passageiros += limite\n %0A   \n@@ -2030,25 +2030,22 @@\n pass\n-_ %3C self.passMax:\n+ageiros %3E 2:  \n %0A   \n@@ -2066,34 +2066,24 @@\n pass\n-_ += 1\n+ageiros = 2\n %0A    \n-        return%0A\n     \n@@ -2124,25 +2124,24 @@\n  atingido%22)%0A\n-%0A\n         %0A   \n",
            "lines": "73"
        },
        {
            "label": "2025-09-30_02-28-30",
            "content": "@@ -1865,19 +1865,17 @@\n pass\n-ageiros = 0\n+_ = 0    \n %0A   \n@@ -1888,14 +1888,23 @@\n elf.\n-km = 0\n+passMax = 2    \n %0A   \n@@ -1920,17 +1920,20 @@\n .gas\n-olina = 0\n+ = 0        \n %0A   \n@@ -1952,75 +1952,66 @@\n sMax\n-%0A%0A    def passMax(self, limite):%0A\n+ = 100  %0A        self.km = 0   \n      \n+%0A%0A\n    \n-self.passageiros += limite\n+ def enter(self):\n %0A   \n@@ -2031,22 +2031,25 @@\n pass\n-ageiros %3E 2:  \n+_ %3C self.passMax:\n %0A   \n@@ -2070,24 +2070,34 @@\n pass\n-ageiros = 2\n+_ += 1\n %0A    \n+        return%0A\n     \n@@ -2142,16 +2142,17 @@\n ngido%22)%0A\n+%0A\n         \n",
            "lines": "75"
        },
        {
            "label": "2025-09-30_02-28-46",
            "content": "@@ -1938,22 +1938,16 @@\n f.gasMax\n- = 100\n %0A%0A    de\n@@ -2145,25 +2145,22 @@\n     def \n-abastecer\n+gasMax\n (self, m\n",
            "lines": "73"
        },
        {
            "label": "2025-09-30_02-30-51",
            "content": "@@ -1948,33 +1948,8 @@\n  100\n-%0A        self.passMax = 2\n %0A%0A  \n",
            "lines": "73"
        },
        {
            "label": "2025-09-30_02-31-26",
            "content": "@@ -1983,28 +1983,28 @@\n def \n-entrar(self, passMax\n+passMax(self, limite\n ):%0A \n@@ -2030,23 +2030,22 @@\n iros += \n-passMax\n+limite\n %0A       \n",
            "lines": "74"
        },
        {
            "label": "2025-09-30_02-32-07",
            "content": "@@ -1982,23 +1982,33 @@\n  def ent\n-e\n+ra\n r(self\n+, passMax\n ):%0A     \n@@ -2006,27 +2006,24 @@\n x):%0A        \n-if \n self.passage\n@@ -2031,23 +2031,18 @@\n ros \n-%3C self.\n++= \n passMax\n-:\n %0A   \n@@ -2042,27 +2042,26 @@\n Max%0A        \n-   \n+if\n  self.passag\n@@ -2070,12 +2070,14 @@\n ros \n-+= 1\n+%3E 2:  \n %0A   \n@@ -2085,13 +2085,32 @@\n     \n-else:\n+    self.passageiros = 2\n %0A   \n",
            "lines": "74"
        },
        {
            "label": "2025-09-30_02-32-35",
            "content": "@@ -1986,25 +1986,15 @@\n  ent\n-ra\n+e\n r(self\n-, passMax\n ):%0A \n@@ -1992,32 +1992,35 @@\n (self):%0A        \n+if \n self.passageiros\n@@ -2026,50 +2026,21 @@\n s %3C \n-passMax%0A        if self.passageiros %3E 2:  \n+self.passMax:\n %0A   \n@@ -2070,16 +2070,16 @@\n os += 1%0A\n+\n         \n@@ -2083,17 +2083,16 @@\n    else:\n- \n %0A       \n",
            "lines": "74"
        },
        {
            "label": "2025-09-30_02-33-40",
            "content": "@@ -2178,123 +2178,8 @@\n do%22)\n-%0A%0A    def sair(self, passageiros)%0A        self.passageiros == 0:%0A            print(%22fail: nao ha ninguem no carro%22)\n %0A   \n@@ -2208,22 +2208,22 @@\n r(self, \n-gasMax\n+maximo\n ):%0A     \n@@ -2243,16 +2243,17 @@\n ina \n-%3C gasMax\n++= maximo\n %0A   \n",
            "lines": "75"
        },
        {
            "label": "2025-09-30_02-36-17",
            "content": "@@ -2174,16 +2174,131 @@\n ingido%22)\n+%0A%0A    def sair(self, passageiros)%0A        self.passageiros == 0:%0A            print(%22fail: nao ha ninguem no carro%22)\n %0A       \n",
            "lines": "79"
        },
        {
            "label": "2025-09-30_02-36-27",
            "content": "@@ -1806,16 +1806,17 @@\n %7D km%60.%0A%0A\n+%0A\n class Ca\n@@ -1935,21 +1935,16 @@\n self.gas\n-olina\n Max = 10\n@@ -1948,29 +1948,8 @@\n  100\n-   # limite do tanque\n %0A   \n@@ -1973,40 +1973,8 @@\n  = 2\n-         # limite de passageiros\n %0A%0A  \n@@ -1982,23 +1982,33 @@\n  def ent\n-e\n+ra\n r(self\n+, passMax\n ):%0A     \n@@ -2006,27 +2006,24 @@\n x):%0A        \n-if \n self.passage\n@@ -2033,21 +2033,50 @@\n s %3C \n-self.passMax:\n+passMax%0A        if self.passageiros %3E 2:  \n %0A   \n@@ -2119,16 +2119,17 @@\n    else:\n+ \n %0A       \n@@ -2208,19 +2208,22 @@\n r(self, \n-qtd\n+gasMax\n ):%0A     \n@@ -2243,14 +2243,16 @@\n ina \n-+= qtd\n+%3C gasMax\n %0A   \n@@ -2275,32 +2275,19 @@\n olina %3E \n-self.gasolinaMax\n+100\n :%0A      \n@@ -2312,24 +2312,11 @@\n a = \n-self.gasolinaMax\n+100\n %0A   \n@@ -2458,17 +2458,16 @@\n .km%7D%22%0A%0A%0A\n-%0A\n def main\n",
            "lines": "75"
        },
        {
            "label": "2025-09-30_02-37-19",
            "content": "@@ -1806,17 +1806,16 @@\n %7D km%60.%0A%0A\n-%0A\n class Ca\n@@ -1934,16 +1934,21 @@\n self.gas\n+olina\n Max = 10\n@@ -1944,24 +1944,45 @@\n inaMax = 100\n+   # limite do tanque\n %0A        sel\n@@ -1994,16 +1994,48 @@\n sMax = 2\n+         # limite de passageiros\n %0A%0A    de\n@@ -2043,25 +2043,15 @@\n  ent\n-ra\n+e\n r(self\n-, passMax\n ):%0A \n@@ -2049,32 +2049,35 @@\n (self):%0A        \n+if \n self.passageiros\n@@ -2083,51 +2083,21 @@\n s %3C \n-passMax%0A        if self.passageiros %3E= 2:  \n+self.passMax:\n %0A   \n@@ -2140,17 +2140,16 @@\n    else:\n- \n %0A       \n@@ -2191,25 +2191,24 @@\n  atingido%22)%0A\n-%0A\n         %0A   \n@@ -2228,22 +2228,19 @@\n r(self, \n-gasMax\n+qtd\n ):%0A     \n@@ -2260,16 +2260,14 @@\n ina \n-%3C gasMax\n++= qtd\n %0A   \n@@ -2290,19 +2290,32 @@\n olina %3E \n-100\n+self.gasolinaMax\n :%0A      \n@@ -2336,19 +2336,32 @@\n olina = \n-100\n+self.gasolinaMax\n %0A       \n@@ -2499,16 +2499,17 @@\n .km%7D%22%0A%0A%0A\n+%0A\n def main\n",
            "lines": "74"
        },
        {
            "label": "2025-09-30_02-37-44",
            "content": "@@ -2066,16 +2066,17 @@\n geiros %3E\n+=\n  2:  %0A  \n",
            "lines": "76"
        },
        {
            "label": "2025-09-30_02-38-52",
            "content": "@@ -1935,21 +1935,16 @@\n self.gas\n-olina\n Max = 10\n@@ -1948,29 +1948,8 @@\n  100\n-   # limite do tanque\n %0A   \n@@ -1973,40 +1973,8 @@\n  = 2\n-         # limite de passageiros\n %0A%0A  \n@@ -1982,23 +1982,33 @@\n  def ent\n-e\n+ra\n r(self\n+, passMax\n ):%0A     \n@@ -2006,27 +2006,24 @@\n x):%0A        \n-if \n self.passage\n@@ -2033,21 +2033,50 @@\n s %3C \n-self.passMax:\n+passMax%0A        if self.passageiros %3E 2:  \n %0A   \n@@ -2119,16 +2119,17 @@\n    else:\n+ \n %0A       \n@@ -2175,16 +2175,17 @@\n ngido%22)%0A\n+%0A\n         \n@@ -2209,19 +2209,22 @@\n r(self, \n-qtd\n+gasMax\n ):%0A     \n@@ -2244,14 +2244,16 @@\n ina \n-+= qtd\n+%3C gasMax\n %0A   \n@@ -2276,32 +2276,19 @@\n olina %3E \n-self.gasolinaMax\n+100\n :%0A      \n@@ -2313,24 +2313,11 @@\n a = \n-self.gasolinaMax\n+100\n %0A   \n@@ -2459,17 +2459,16 @@\n .km%7D%22%0A%0A%0A\n-%0A\n def main\n",
            "lines": "76"
        },
        {
            "label": "2025-09-30_14-16-14",
            "content": "@@ -1952,16 +1952,34 @@\n = 100   \n+# limite do tanque\n %0A       \n@@ -2004,16 +2004,39 @@\n         \n+# limite de passageiros\n %0A%0A    de\n@@ -2051,17 +2051,8 @@\n self\n-, passMax\n ):%0A \n@@ -2229,22 +2229,19 @@\n r(self, \n-gasMax\n+qtd\n ):%0A     \n@@ -2264,14 +2264,11 @@\n  += \n-maximo\n+qtd\n %0A   \n",
            "lines": "75"
        },
        {
            "label": "2025-09-30_14-17-32",
            "content": "@@ -2200,21 +2200,16 @@\n elf, gas\n-olina\n Max):%0A  \n",
            "lines": "75"
        },
        {
            "label": "2025-09-30_14-19-09",
            "content": "@@ -2002,24 +2002,33 @@\n f enter(self\n+, passMax\n ):%0A        i\n@@ -2191,24 +2191,37 @@\n astecer(self\n+, gasolinaMax\n ):%0A        s\n@@ -2236,27 +2236,22 @@\n lina += \n-gasolinaMax\n+maximo\n %0A       \n@@ -2717,76 +2717,8 @@\n rro)\n-%0A        %0A        elif args%5B0%5D == %22enter%22:%0A            carro.enter()\n %0A%0Ama\n",
            "lines": "75"
        },
        {
            "label": "2025-09-30_14-24-50",
            "content": "@@ -2158,181 +2158,8 @@\n do%22)\n-%0A%0A    def leave(self):%0A        if self.passageiros %3E self.passMax:%0A            self.passageiros -= 1%0A            else:%0A                print(%22fail: nao ha ninguem no carro%22)\n %0A   \n@@ -2770,65 +2770,8 @@\n ()%0A%0A\n-        elif args%5B0%5D %22leave%22:%0A            carro.leave()%0A%0A\n main\n",
            "lines": "78"
        },
        {
            "label": "2025-09-30_14-33-15",
            "content": "@@ -2267,25 +2267,16 @@\n         \n-%0A        \n else:%0A  \n",
            "lines": "87"
        },
        {
            "label": "2025-09-30_14-33-32",
            "content": "@@ -2209,11 +2209,22 @@\n ros \n-%3C 0\n+%3E self.passMax\n :%0A  \n@@ -2251,24 +2251,37 @@\n geiros -= 1%0A\n+            %0A\n         else\n",
            "lines": "88"
        },
        {
            "label": "2025-09-30_14-35-05",
            "content": "@@ -2155,21 +2155,17 @@\n ngido%22)%0A\n-    \n %0A\n+\n     def \n@@ -2205,17 +2205,17 @@\n ageiros \n-%3E\n+%3C\n  0:%0A    \n@@ -2250,32 +2250,36 @@\n 1%0A        else:%0A\n+    \n             prin\n",
            "lines": "87"
        },
        {
            "label": "2025-09-30_14-35-40",
            "content": "@@ -2944,19 +2944,16 @@\n  args%5B0%5D\n- ==\n  %22leave%22\n",
            "lines": "87"
        },
        {
            "label": "2025-09-30_14-35-49",
            "content": "@@ -2151,24 +2151,181 @@\n  atingido%22)%0A\n+    %0A    def leave(self):%0A        if self.passageiros %3E 0:%0A            self.passageiros -= 1%0A        else:%0A            print(%22fail: nao ha ninguem no carro%22)\n %0A        %0A  \n@@ -2924,15 +2924,75 @@\n nter()%0A%0A\n+        elif args%5B0%5D == %22leave%22:%0A            carro.leave()%0A%0A\n main()%0A\n",
            "lines": "87"
        },
        {
            "label": "2025-09-30_14-36-26",
            "content": "@@ -2159,169 +2159,8 @@\n o%22)%0A\n-        %0A    def leave(self):%0A        if self.passageiros %3C 0:%0A            self.passageiros -= 1%0A        else:%0A            print(%22fail: n%C3%A3o h%C3%A1 ningu%C3%A9m no carro%22)\n %0A   \n@@ -2701,68 +2701,8 @@\n rro)\n-%0A%0A        elif args%5B0%5D == %22leave%22:%0A            carro.leave()\n %0A   \n",
            "lines": "79"
        },
        {
            "label": "2025-09-30_14-38-20",
            "content": "@@ -2860,16 +2860,75 @@\n carro)%0A%0A\n+        elif args%5B0%5D == %22leave%22:%0A            carro.leave()%0A\n         \n",
            "lines": "87"
        },
        {
            "label": "2025-09-30_14-38-42",
            "content": "@@ -2313,25 +2313,24 @@\n  no carro%22)%0A\n-%0A\n         %0A   \n",
            "lines": "85"
        },
        {
            "label": "2025-09-30_14-40-09",
            "content": "@@ -2314,24 +2314,33 @@\n no carro%22)%0A%0A\n+        %0A\n     def abas\n@@ -2352,24 +2352,28 @@\n (self):%0A    \n+ \n+   \n self.gasolin\n@@ -2381,16 +2381,28 @@\n  += \n-qtd%0A\n+gasolinaMax%0A   \n     \n+ \n if s\n@@ -2430,24 +2430,28 @@\n asolinaMax:%0A\n+    \n         self\n@@ -2479,32 +2479,36 @@\n linaMax%0A        \n+    \n print(%22fail: tan\n@@ -2520,17 +2520,16 @@\n heio%22)%0A%0A\n-%0A\n     def \n",
            "lines": "86"
        },
        {
            "label": "2025-09-30_14-41-47",
            "content": "@@ -2364,27 +2364,19 @@\n lina += \n-gasolinaMax\n+qtd\n %0A    if \n",
            "lines": "86"
        },
        {
            "label": "2025-09-30_14-42-01",
            "content": "@@ -2313,33 +2313,25 @@\n  no carro%22)%0A\n-        \n %0A\n+\n     def abas\n@@ -2335,36 +2335,32 @@\n bastecer(self):%0A\n-    \n     self.gasolin\n@@ -2372,28 +2372,24 @@\n gasolinaMax%0A\n-    \n     if self.\n@@ -2421,28 +2421,24 @@\n ax:%0A        \n- \n-   \n self.gasolin\n@@ -2458,36 +2458,32 @@\n linaMax%0A        \n-    \n print(%22fail: tan\n@@ -2491,24 +2491,25 @@\n ue cheio%22)%0A%0A\n+%0A\n     def __st\n",
            "lines": "86"
        },
        {
            "label": "2025-09-30_14-42-09",
            "content": "@@ -2859,16 +2859,17 @@\n (carro)%0A\n+%0A\n         \n@@ -2933,83 +2933,8 @@\n ()%0A%0A\n-        elif args%5B0%5D == %22fuel%22:%0A            carro.abastecer(int(args%5B1%5D))%0A%0A\n main\n",
            "lines": "85"
        },
        {
            "label": "2025-09-30_14-42-42",
            "content": "@@ -2213,17 +2213,17 @@\n ageiros \n-%3E\n+%3C\n  0:%0A    \n",
            "lines": "87"
        },
        {
            "label": "2025-09-30_14-43-32",
            "content": "@@ -2214,17 +2214,16 @@\n geiros %3E\n-=\n  0:%0A    \n",
            "lines": "87"
        },
        {
            "label": "2025-09-30_14-43-47",
            "content": "@@ -2214,16 +2214,17 @@\n geiros %3E\n+=\n  0:%0A    \n@@ -2289,36 +2289,36 @@\n int(%22fail: n\n-ao ha\n+%C3%A3o h%C3%A1\n  ningu\n-e\n+%C3%A9\n m no carro%22)\n@@ -2353,13 +2353,8 @@\n self\n-, qtd\n ):%0A \n@@ -2381,11 +2381,19 @@\n  += \n-qtd\n+gasolinaMax\n %0A   \n@@ -2625,16 +2625,17 @@\n .km%7D%22%0A%0A%0A\n+%0A\n def main\n@@ -2860,16 +2860,25 @@\n (carro)%0A\n+        %0A\n         \n@@ -2932,66 +2932,8 @@\n r()%0A\n-        elif args%5B0%5D == %22leave%22:%0A            carro.leave()\n %0A   \n@@ -3011,9 +3011,8 @@\n %0Amain()%0A\n-%0A\n",
            "lines": "87"
        },
        {
            "label": "2025-09-30_14-45-01",
            "content": "@@ -2313,25 +2313,24 @@\n  no carro%22)%0A\n-%0A\n         %0A   \n@@ -2344,24 +2344,29 @@\n astecer(self\n+, qtd\n ):%0A        s\n@@ -2381,27 +2381,19 @@\n lina += \n-gasolinaMax\n+qtd\n %0A       \n@@ -2621,17 +2621,16 @@\n .km%7D%22%0A%0A%0A\n-%0A\n def main\n@@ -2855,25 +2855,16 @@\n (carro)%0A\n-        %0A\n         \n@@ -2914,17 +2914,75 @@\n enter()%0A\n+        elif args%5B0%5D == %22leave%22:%0A            carro.leave()\n %0A\n-\n         \n@@ -3052,11 +3052,12 @@\n ))%0A%0A\n-\n main()%0A\n+%0A\n",
            "lines": "87"
        },
        {
            "label": "2025-09-30_14-45-30",
            "content": "@@ -2213,18 +2213,17 @@\n ageiros \n-==\n+%3E\n  0:%0A    \n",
            "lines": "88"
        },
        {
            "label": "2025-09-30_14-45-51",
            "content": "@@ -2213,17 +2213,18 @@\n ageiros \n-%3E\n+==\n  0:%0A    \n@@ -2934,68 +2934,8 @@\n ()%0A%0A\n-        elif args%5B0%5D == %22leave%22:%0A            carro.leave()%0A%0A\n     \n",
            "lines": "88"
        },
        {
            "label": "2025-09-30_14-46-45",
            "content": "@@ -3048,18 +3048,17 @@\n bastecer\n-: \n+(\n int(args\n@@ -3061,16 +3061,17 @@\n args%5B1%5D)\n+)\n %0A%0Amain()\n",
            "lines": "91"
        },
        {
            "label": "2025-09-30_14-47-03",
            "content": "@@ -2309,32 +2309,33 @@\n guem no carro%22)%0A\n+%0A\n         %0A    def\n@@ -2353,13 +2353,8 @@\n self\n-, qtd\n ):%0A \n@@ -2381,11 +2381,19 @@\n  += \n-qtd\n+gasolinaMax\n %0A   \n@@ -2483,506 +2483,47 @@\n Max%0A\n-%0A    def drive(self, distancia):%0A        if self.passageiros == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A            return%0A        if self.gasolina == 0:%0A            print(%22fail: tanque vazio%22)%0A            return%0A        %0A        if distancia %3C= self.gasolina:%0A            self.km += distancia%0A            self.gasolina -= distancia%0A        else:%0A            self.km += self.gasolina%0A            print(f%22fail: tanque vazio apos andar %7Bself.gasolina%7D km%22)%0A            self.gasolina = 0\n+            print(%22fail: tanque cheio%22)\n %0A%0A  \n@@ -2565,16 +2565,17 @@\n  f%22pass:\n+ \n %7Bself.pa\n@@ -2590,16 +2590,17 @@\n s%7D, gas:\n+ \n %7Bself.ga\n@@ -2611,16 +2611,17 @@\n na%7D, km:\n+ \n %7Bself.km\n@@ -2625,16 +2625,17 @@\n .km%7D%22%0A%0A%0A\n+%0A\n def main\n@@ -2860,16 +2860,25 @@\n (carro)%0A\n+        %0A\n         \n@@ -2928,16 +2928,17 @@\n enter()%0A\n+%0A\n         \n@@ -2988,16 +2988,17 @@\n leave()%0A\n+%0A\n         \n@@ -3052,80 +3052,10 @@\n ecer\n-(int(args%5B1%5D))%0A        elif args%5B0%5D == %22drive%22:%0A            carro.drive(\n+: \n int(\n@@ -3066,16 +3066,13 @@\n %5B1%5D)\n-)\n %0A%0A\n-%0A\n main()%0A\n-%0A\n",
            "lines": "91"
        },
        {
            "label": "2025-09-30_14-48-23",
            "content": "@@ -2313,25 +2313,24 @@\n  no carro%22)%0A\n-%0A\n         %0A   \n@@ -2344,24 +2344,29 @@\n astecer(self\n+, qtd\n ):%0A        s\n@@ -2381,27 +2381,19 @@\n lina += \n-gasolinaMax\n+qtd\n %0A       \n@@ -2479,47 +2479,506 @@\n Max%0A\n-            print(%22fail: tanque cheio%22)\n+%0A    def drive(self, distancia):%0A        if self.passageiros == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A            return%0A        if self.gasolina == 0:%0A            print(%22fail: tanque vazio%22)%0A            return%0A        %0A        if distancia %3C= self.gasolina:%0A            self.km += distancia%0A            self.gasolina -= distancia%0A        else:%0A            self.km += self.gasolina%0A            print(f%22fail: tanque vazio apos andar %7Bself.gasolina%7D km%22)%0A            self.gasolina = 0\n %0A%0A  \n@@ -3020,17 +3020,16 @@\n  f%22pass:\n- \n %7Bself.pa\n@@ -3044,17 +3044,16 @@\n s%7D, gas:\n- \n %7Bself.ga\n@@ -3064,17 +3064,16 @@\n na%7D, km:\n- \n %7Bself.km\n@@ -3077,17 +3077,16 @@\n .km%7D%22%0A%0A%0A\n-%0A\n def main\n@@ -3311,25 +3311,16 @@\n (carro)%0A\n-        %0A\n         \n@@ -3370,17 +3370,16 @@\n enter()%0A\n-%0A\n         \n@@ -3429,17 +3429,16 @@\n leave()%0A\n-%0A\n         \n@@ -3488,18 +3488,88 @@\n bastecer\n-: \n+(int(args%5B1%5D))%0A        elif args%5B0%5D == %22drive%22:%0A            carro.drive(\n int(args\n@@ -3576,13 +3576,16 @@\n %5B1%5D)\n+)\n %0A%0A\n+%0A\n main()%0A\n+%0A\n",
            "lines": "105"
        },
        {
            "label": "2025-09-30_14-48-40",
            "content": "@@ -2989,16 +2989,90 @@\n eave()%0A%0A\n+        elif args%5B0%5D == %22fuel%22:%0A            carro.abastecer: int(args%5B1%5D)%0A\n %0Amain()%0A\n",
            "lines": "91"
        },
        {
            "label": "2025-09-30_14-48-53",
            "content": "@@ -2929,16 +2929,75 @@\n nter()%0A%0A\n+        elif args%5B0%5D == %22leave%22:%0A            carro.leave()%0A\n %0A%0Amain()\n",
            "lines": "89"
        },
        {
            "label": "2025-09-30_14-49-01",
            "content": "@@ -2932,67 +2932,8 @@\n r()%0A\n-        elif args%5B0%5D == %22leave%22:%0A            carro.leave()%0A\n %0A%0A%0Am\n",
            "lines": "87"
        },
        {
            "label": "2025-09-30_14-50-20",
            "content": "@@ -2322,100 +2322,8 @@\n %22)%0A%0A\n-    def fuel(self, qtd):%0A        self.gasolina = min(self.gasolina + qtd, self.gasolinaMax)%0A\n     \n",
            "lines": "89"
        },
        {
            "label": "2025-09-30_14-52-16",
            "content": "@@ -2318,16 +2318,116 @@\n arro%22)%0A%0A\n+    def fuel(self, qtd):%0A        self.gasolina = min(self.gasolina + qtd, self.gasolinaMax)%0A        \n %0A    def\n",
            "lines": "91"
        },
        {
            "label": "2025-09-30_14-52-34",
            "content": "@@ -2920,16 +2920,75 @@\n enter()%0A\n+        elif args%5B0%5D == %22leave%22:%0A            carro.leave()%0A\n %0A%0A%0Amain(\n",
            "lines": "89"
        },
        {
            "label": "2025-09-30_14-52-44",
            "content": "@@ -1950,9 +1950,10 @@\n x = \n-6\n+10\n 0   \n",
            "lines": "87"
        },
        {
            "label": "2025-09-30_14-54-44",
            "content": "@@ -1861,29 +1861,8 @@\n elf.\n-pass_ = 0          # \n pass\n@@ -1873,14 +1873,11 @@\n ros \n-atuais\n+= 0\n %0A   \n@@ -1890,102 +1890,40 @@\n elf.\n-passMax = 2        # limite de passageiros%0A        self.gas = 0            # combust%C3%ADvel atual\n+km = 0%0A        self.gasolina = 0\n %0A   \n@@ -1939,101 +1939,58 @@\n .gas\n+olina\n Max = \n-100       # limite do tanque%0A        self.km = 0             # quilometragem percorrida\n+60   %0A        self.passMax = 2         \n %0A%0A  \n@@ -2028,17 +2028,23 @@\n elf.pass\n-_\n+ageiros\n  %3C self.\n@@ -2073,17 +2073,23 @@\n elf.pass\n-_\n+ageiros\n  += 1%0A  \n@@ -2150,24 +2150,32 @@\n  atingido%22)%0A\n+        \n %0A    def lea\n@@ -2204,17 +2204,23 @@\n elf.pass\n-_\n+ageiros\n  %3E 0:%0A  \n@@ -2238,17 +2238,23 @@\n elf.pass\n-_\n+ageiros\n  -= 1%0A  \n@@ -2317,24 +2317,25 @@\n arro%22)%0A%0A\n+%0A\n     def \n fuel(sel\n@@ -2330,88 +2330,61 @@\n def \n-fuel(self, qtd: int):%0A        self.gas += qtd%0A        if self.gas %3E self.gas\n+abastecer(self):%0A        self.gasolina += gasolina\n Max\n-:\n %0A   \n@@ -2392,388 +2392,89 @@\n     \n-    self.gas = self.gasMax%0A%0A    def drive(self, dist: int):%0A        if\n+if self.gasolina %3E\n  self.\n-pass_ == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A            return%0A        if self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A            return%0A%0A        if dist %3C= self.gas:%0A            self.gas -= dist%0A            self.km += dist%0A        else:%0A            # anda at%C3%A9 onde consegue\n+gasolinaMax:%0A            self.gasolina = self.gasolinaMax\n %0A   \n@@ -2488,17 +2488,16 @@\n   print(\n-f\n %22fail: t\n@@ -2506,97 +2506,15 @@\n que \n-vazio apos andar %7Bself.gas%7D km%22)%0A            self.km += self.gas%0A            self.gas = 0\n+cheio%22)\n %0A%0A  \n@@ -2556,16 +2556,17 @@\n  f%22pass:\n+ \n %7Bself.pa\n@@ -2571,16 +2571,23 @@\n pass\n-_\n+ageiros\n %7D, gas:\n+ \n %7Bsel\n@@ -2591,22 +2591,28 @@\n self.gas\n+olina\n %7D, km:\n+ \n %7Bself.km\n@@ -2616,16 +2616,17 @@\n .km%7D%22%0A%0A%0A\n+%0A\n def main\n@@ -2684,24 +2684,50 @@\n e = input()%0A\n+        print(%22$%22 + line)%0A\n         args\n@@ -2740,17 +2740,21 @@\n e.split(\n-)\n+%22 %22)%0A\n %0A       \n@@ -2758,21 +2758,18 @@\n     \n-cmd =\n+if\n  args%5B0%5D\n %0A%0A  \n@@ -2768,24 +2768,8 @@\n s%5B0%5D\n-%0A%0A        if cmd\n  == \n@@ -2802,27 +2802,31 @@\n        elif \n-cmd\n+args%5B0%5D\n  == %22show%22:%0A\n@@ -2824,16 +2824,17 @@\n  %22show%22:\n+ \n %0A       \n@@ -2863,299 +2863,68 @@\n     \n-elif cmd == %22enter%22:%0A            carro.enter()%0A        elif cmd == %22leave%22:%0A            carro.leave()%0A        elif cmd == %22fuel%22:%0A            carro.fuel(int(args%5B1%5D))%0A        elif cmd == %22drive%22:%0A            carro.drive(int(args%5B1%5D))%0A        else:%0A            print(%22fail: comando invalido%22)\n+%0A        elif args%5B0%5D == %22enter%22:%0A            carro.enter()%0A\n %0A%0A%0Am\n",
            "lines": "87"
        },
        {
            "label": "2025-09-30_14-56-16",
            "content": "@@ -3171,13 +3171,8 @@\n line\n-: str\n  = i\n@@ -3194,18 +3194,8 @@\n args\n-:list%5Bstr%5D\n  = l\n@@ -3208,11 +3208,8 @@\n lit(\n-%22 %22\n )%0A  \n@@ -3218,25 +3218,21 @@\n     \n-print(%22$%22 + line)\n+cmd = args%5B0%5D\n %0A%0A  \n@@ -3240,23 +3240,19 @@\n      if \n-args%5B0%5D\n+cmd\n  == %22end\n@@ -3281,31 +3281,27 @@\n        elif \n-args%5B0%5D\n+cmd\n  == %22show%22:%0A\n@@ -3334,31 +3334,27 @@\n        elif \n-args%5B0%5D\n+cmd\n  == %22enter%22:\n@@ -3389,31 +3389,27 @@\n        elif \n-args%5B0%5D\n+cmd\n  == %22leave%22:\n@@ -3444,31 +3444,27 @@\n        elif \n-args%5B0%5D\n+cmd\n  == %22fuel%22:%0A\n@@ -3513,23 +3513,19 @@\n    elif \n-args%5B0%5D\n+cmd\n  == %22dri\n",
            "lines": "107"
        },
        {
            "label": "2025-09-30_14-57-25",
            "content": "@@ -3061,17 +3061,16 @@\n  f%22pass:\n- \n %7Bself.pa\n",
            "lines": "107"
        },
        {
            "label": "2025-09-30_14-57-35",
            "content": "@@ -3080,17 +3080,16 @@\n _%7D, gas:\n- \n %7Bself.ga\n@@ -3095,17 +3095,16 @@\n as%7D, km:\n- \n %7Bself.km\n",
            "lines": "107"
        },
        {
            "label": "2025-09-30_14-57-46",
            "content": "@@ -1861,23 +1861,17 @@\n elf.pass\n-ageiros\n+_\n  = 0    \n@@ -1868,32 +1868,52 @@\n s_ = 0          \n+# passageiros atuais\n %0A        self.pa\n@@ -1921,32 +1921,55 @@\n sMax = 2        \n+# limite de passageiros\n %0A        self.ga\n@@ -1981,24 +1981,43 @@\n             \n+# combust%C3%ADvel atual\n %0A        sel\n@@ -2037,16 +2037,34 @@\n 0       \n+# limite do tanque\n %0A       \n@@ -2088,16 +2088,42 @@\n         \n+# quilometragem percorrida\n %0A%0A    de\n@@ -2157,23 +2157,17 @@\n elf.pass\n-ageiros\n+_\n  %3C self.\n@@ -2196,23 +2196,17 @@\n elf.pass\n-ageiros\n+_\n  += 1%0A  \n@@ -2313,23 +2313,17 @@\n elf.pass\n-ageiros\n+_\n  %3E 0:%0A  \n@@ -2341,23 +2341,17 @@\n elf.pass\n-ageiros\n+_\n  -= 1%0A  \n@@ -2591,23 +2591,17 @@\n elf.pass\n-ageiros\n+_\n  == 0:%0A \n@@ -2847,32 +2847,69 @@\n t%0A        else:%0A\n+            # anda at%C3%A9 onde consegue%0A\n             prin\n@@ -3072,23 +3072,17 @@\n elf.pass\n-ageiros\n+_\n %7D, gas: \n",
            "lines": "107"
        },
        {
            "label": "2025-09-30_15-01-44",
            "content": "#Nesta atividade, vamos implementar um carro ecol\u00f3gico. Ele deve ser capaz de embarcar e desembarcar pessoas, abastecer e andar.\n\n#- O carro deve ser inicializado com o tanque vazio, sem ningu\u00e9m dentro e com 0 quil\u00f4metros percorridos.\n# Suporta at\u00e9 2 pessoas e at\u00e9 100 litros de combust\u00edvel.\n\n#- Construtor do Carro\n#  - `pass`: 0 passageiros. \n#  - `km`: 0 quil\u00f4metros percorridos.\n#  - `passMax`: M\u00e1ximo de 2 pessoas.\n#  - `gas`: 0 litros de gasolina.\n#  - `gasMax`: M\u00e1ximo de 100 litros de gasolina.\n#  - Mostrar `$show`\n# - Imprime a chamada do m\u00e9todo `toString` do carro.\n#  - `toString` - Retorna uma string com o estado atual do carro no formato:\n#  - `\"pass:{pass}, gas:{gas}, km:{km}\"`.\n# - Entrar `$enter`\n # - Embarca uma pessoa por vez, mas n\u00e3o al\u00e9m do m\u00e1ximo.\n#  - Se o carro estiver lotado, emite a mensagem de erro.\n#    - `fail: limite de pessoas atingido`.\n#- Sair `$leave`\n#  - Desembarca uma pessoa por vez.\n#  - Se n\u00e3o houver ningu\u00e9m no carro, emite a mensagem de erro.\n#    - `fail: nao ha ninguem no carro`.\n#- Abastecer certa quantidade `$fuel increment`\n#  - Abastece o tanque com a quantidade de litros de combust\u00edvel passada.\n#  - Caso tente abastecer acima do limite, descarta o valor excedente.\n#- Dirigir certa dist\u00e2ncia `$drive distance`\n#  - Para dirigir, o carro consome combust\u00edvel e aumenta a quilometragem.\n#  - S\u00f3 pode dirigir se houver combust\u00edvel e se houver algu\u00e9m no carro.\n#  - Caso n\u00e3o haja ningu\u00e9m no carro, emite a mensagem de erro.\n#    - `fail: n\u00e3o h\u00e1 ningu\u00e9m no carro`\n#  - Caso n\u00e3o haja combust\u00edvel, emite a mensagem de erro.\n#    - `fail: tanque vazio`\n#  - Caso n\u00e3o exista combust\u00edvel suficiente para completar a viagem inteira, dirija o m\u00e1ximo poss\u00edvel e emite uma mensagem indicando quanto foi percorrido\n#    - `fail: tanque vazio ap\u00f3s andar {distancia} km`.\n\n\nclass Carro:\n    def __init__(self):\n        self.passageiros = 0          \n        self.passMax = 2        \n        self.gas = 0            \n        self.gasMax = 100       \n        self.km = 0             \n\n    def enter(self):\n        if self.passageiros < self.passMax:\n            self.passageiros += 1\n        else:\n            print(\"fail: limite de pessoas atingido\")\n\n    def leave(self):\n        if self.passageiros > 0:\n            self.passageiros -= 1\n        else:\n            print(\"fail: nao ha ninguem no carro\")\n\n    def fuel(self, qtd: int):\n        self.gas += qtd\n        if self.gas > self.gasMax:\n            self.gas = self.gasMax\n\n    def drive(self, dist: int):\n        if self.passageiros == 0:\n            print(\"fail: nao ha ninguem no carro\")\n            return\n        if self.gas == 0:\n            print(\"fail: tanque vazio\")\n            return\n\n        if dist <= self.gas:\n            self.gas -= dist\n            self.km += dist\n        else:\n            print(f\"fail: tanque vazio apos andar {self.gas} km\")\n            self.km += self.gas\n            self.gas = 0\n\n    def __str__(self):\n        return f\"pass: {self.passageiros}, gas: {self.gas}, km: {self.km}\"\n\n\ndef main():\n    carro = Carro()\n    while True:\n        line: str = input()\n        args:list[str] = line.split(\" \")\n        print(\"$\" + line)\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"show\":\n            print(carro)\n        elif args[0] == \"enter\":\n            carro.enter()\n        elif args[0] == \"leave\":\n            carro.leave()\n        elif args[0] == \"fuel\":\n            carro.fuel(int(args[1]))\n        elif args[0] == \"drive\":\n            carro.drive(int(args[1]))\n        else:\n            print(\"fail: comando invalido\")\n\n\nmain()\n",
            "lines": "106"
        }
    ]
}