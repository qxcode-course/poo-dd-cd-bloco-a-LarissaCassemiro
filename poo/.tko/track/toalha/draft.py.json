{
    "patches": [
        {
            "label": "2025-09-16_19-39-49",
            "content": "@@ -1,1147 +1,29 @@\n-#- Crie uma classe Toalha %60Towel%60 com os atributos cor %60color%60, tamanho %60size%60 e umidade %60wetness%60.%0A#- Crie um construtor que inicialize todos os atributos cor e tamanho com valores recebidos como par%C3%A2metro e umidade com 0.%0A- Crie um m%C3%A9todo enxugar %60dry%60 que recebe um valor inteiro quantidade %60amout%60 e AUMENTA o atributo umidade da toalha.%0A- Crie um m%C3%A9todo torcer %60wringOut%60 que zera o atributo umidade da towel.%0A- Crie um m%C3%A9todo para pegar m%C3%A1ximo de umidade %60getMaxWetness%60 que retorna o valor m%C3%A1ximo de umidade que essa toalha pode ter.%0A- O m%C3%A1ximo de umidade que uma toalha pode ter %C3%A9 de acordo com o tamanho dela:%0A  - %60P%60 -%3E 10%0A  - %60M%60 -%3E 20%0A  - %60G%60 -%3E 30%0A- Crie um m%C3%A9todo que retorna se a toalha esta seca %60isDry%60, que retorna %60true%60 se a umidade da toalha for 0 e %60false%60 caso contr%C3%A1rio.%0A- Fa%C3%A7a um c%C3%B3digo de teste para validar o comportamento da classe Toalha.%0A%0Aprint(%22ol%C3%A1%22)%0A%0Aclass Towel:%0A    def __init__(self, color: str, size: str):%0A        self.color: str = color%0A        self.size: str = size%0A        self.wetness: int = 0%0A%0Aclass Tower %7B%0A    color,%0A    size,%0A    wetness%0A%7D%0A%0Aclass Towel:%0A    def __init__(self, color: str, size:str):%0A%0A%0A\n+print (%22minha toalha %C3%A9 bege%22)\n",
            "lines": "1"
        },
        {
            "label": "2025-09-16_20-03-21",
            "content": "@@ -1,188 +1,1395 @@\n+@@ -1,17 +1,1147 @@%0A-%250A%250Aprint(%2522ol%25C3%25A1%2522)%0A+#- Crie uma \n class\n+e\n  To\n-wel:%0A    def __init__(self):%0A        self.color = %22blue%22%0A        self.size = %22G%22%0A        sel.wetness = 0%0A%0Atowel = Towel()%0Aprint(towel.color)%0Aprint(tow\n+alha %2560Towel%2560 com os atributos cor %2560color%2560, tamanho %2560size%2560 e umidade %2560wetness%2560.%250A#- Crie um construtor que inicialize todos os atributos cor e tamanho com valores recebidos como par%25C3%25A2metro e umidade com 0.%250A- Crie um m%25C3%25A9todo enxugar %2560dry%2560 que recebe um valor inteiro quantidade %2560amout%2560 e AUMENTA o atributo umidade da toalha.%250A- Crie um m%25C3%25A9todo torcer %2560wringOut%2560 que zera o atributo umidade da towel.%250A- Crie um m%25C3%25A9todo para pegar m%25C3%25A1ximo de umidade %2560getMaxWetness%2560 que retorna o valor m%25C3%25A1ximo de umidade que essa toalha pode ter.%250A- O m%25C3%25A1ximo de umidade que uma toalha pode ter %25C3%25A9 de acordo com o tamanho dela:%250A  - %2560P%2560 -%253E 10%250A  - %2560M%2560 -%253E 20%250A  - %2560G%2560 -%253E 30%250A- Crie um m%25C3%25A9todo que retorna se a toalha esta seca %2560isDry%2560, que retorna %2560true%2560 se a umidade da toalha for 0 e %2560false%2560 caso contr%25C3%25A1rio.%250A- Fa%25C3%25A7a um c%25C3%25B3digo de teste para validar o comportamento da classe Toalha.%250A%250Aprint(%2522ol%25C3%25A1%2522)%250A%250Aclass Towel:%250A    def __init__(self, color: str, size: str):%250A        self.color: str = color%250A        s\n el\n+f\n .size\n-)%0Aprint(towel.wetness)\n+: str = size%250A        self.wetness: int = 0%250A%250Aclass Tower %257B%250A    color,%250A    size,%250A    wetness%250A%257D%250A%250Aclass Towel:%250A    def __init__(self, color: str, size:str):%0A %250A%250A%250A\n %0A\n",
            "lines": "4"
        },
        {
            "label": "2025-09-16_20-08-52",
            "content": "@@ -1,135 +1,380 @@\n-class Towel:%0A    def __init__(self):%0A        self.color = %22blue%22%0A        self.size = %22G%22%0A        self.wetness = 0%0A%0Atowel = Tow\n+@@ -1,8 +1,28 @@%0A+@@ -1,134 +1,34 @@%250A-%0A class To%0A@@ -25,17 +25,19 @@%0A s Towel:%0A-%250A%0A+%25250A%0A     def %0A@@ -51,17 +51,19 @@%0A _(self):%0A-%250A%0A+%25250A%0A         %0A@@ -79,15 +79,21 @@%0A r = %0A-%2522%0A+%252522%0A blue%0A-%2522%250A%0A+%252522%25250A%0A     %0A@@ -112,12 +112,18 @@%0A e = %0A-%2522G%2522%250A%0A+%252522G%252522%25250A%0A     %0A@@ -145,10 +145,14 @@%0A  = 0%0A-%250A%250A%0A+%25250A%25250A%0A towe%0A@@ -166,31 +166,108 @@%0A \n el()%0A\n+-%250A\n towe\n@@ -387,70 +387,339 @@\n r = \n-%22\n+%2522\n white\n-%22%0Aprint(towel.color)%0Aprint(towel.size)%0Aprint(towel.wetness)\n+%2522%250A%0A+%25250A%250A+@@ -127,30 +127,8 @@%25250A l()%2525250A%25250A-%250A towe%250A@@ -41,70 +41,25 @@%250A r = %250A-%252522%250A+%25252522%250A white%250A-%252522%25250A%0A prin%0A@@ -280,17 +280,19 @@%0A l.color)%0A-%250A%0A+%25250A%0A print(to%0A@@ -300,17 +300,19 @@%0A el.size)%0A-%250A%0A+%25250A%0A print(to%0A@@ -324,8 +324,33 @@%0A etness)%250A%0A++%25252522%2525250A%25250A prin%250A %25250A%250A\n %0A\n",
            "lines": "49"
        },
        {
            "label": "2025-09-16_20-10-22",
            "content": "@@ -1,191 +1,40 @@\n-# Criar a classe toalha com cor, tamanho e umidade%0A# Iniciar cor e tamanho com par%C3%A2metros definidos e umidade = 0%0A%0Aclass Towel:%0A    def __init__(self), color: str, size: str) #Constuctor \n+class Towel:%0A    def __init__(self):\n %0A   \n@@ -55,23 +55,14 @@\n r = \n-color #atribut \n+%22blue%22\n %0A   \n@@ -82,21 +82,11 @@\n e = \n-size #atribut\n+%22G%22\n %0A   \n@@ -110,119 +110,25 @@\n  = 0\n- #atribut%0A%0A#referencia%0Atowel = Towel(%22blue%22, %22G%22) #object%0Atowel_2 = Towel (%22green%22, %22P%22) #object %0Aoutra = towel\n+%0A%0Atowel = Towel()\n %0Atow\n",
            "lines": "11"
        },
        {
            "label": "2025-09-16_20-19-16",
            "content": "@@ -1,474 +1,1162 @@\n-# Criar a classe toalha com cor, tamanho e umidade%0A# Iniciar cor e tamanho com par%C3%A2metros definidos e umidade = 0%0A%0Aclass Towel:%0A    def __init__(self, color: str, size: str) #Constuctor %0A        self.color = color #atribut %0A        self.size = size #atribut%0A        self.wetness = 0 #atribut%0A%0A#referencia%0Atowel = Towel(%22blue%22, %22G%22) #object%0Atowel_2 = Towel (%22green%22, %22P%22) #object %0Aoutra = towel%0Atowel.color = %22white%22%0Aprint(towel.color)%0Aprint(towel.size)%0Aprint(towel.wetness)\n+@@ -1,8 +1,28 @@%0A+@@ -1,474 +1,45 @@%250A-%0A # Criar %0A@@ -63,17 +63,19 @@%0A  umidade%0A-%250A%0A+%25250A%0A # Inicia%0A@@ -101,9 +101,14 @@%0A  par%0A-%25C3%25A2%0A+%2525C3%2525A2%0A metr%0A@@ -133,18 +133,22 @@%0A dade = 0%0A-%250A%250A%0A+%25250A%25250A%0A class To%0A@@ -151,17 +151,19 @@%0A s Towel:%0A-%250A%0A+%25250A%0A     def %0A@@ -212,17 +212,19 @@%0A stuctor %0A-%250A%0A+%25250A%0A         %0A@@ -251,17 +251,19 @@%0A atribut %0A-%250A%0A+%25250A%0A         %0A@@ -287,17 +287,19 @@%0A #atribut%0A-%250A%0A+%25250A%0A         %0A@@ -327,10 +327,14 @@%0A ibut%0A-%250A%250A%0A+%25250A%25250A%0A #ref%0A@@ -340,17 +340,19 @@%0A ferencia%0A-%250A%0A+%25250A%0A towel = %0A@@ -361,19 +361,27 @@%0A wel(%0A-%2522%0A+%252522%0A blue%0A-%2522, %2522G%2522%0A+%252522, %252522G%252522%0A ) #o%0A@@ -385,17 +385,19 @@%0A  #object%0A-%250A%0A+%25250A%0A towel_2 %0A@@ -409,20 +409,28 @@%0A el (%0A-%2522%0A+%252522%0A green%0A-%2522, %2522P%2522%0A+%252522, %252522P%252522%0A ) #o%0A@@ -435,17 +435,19 @@%0A #object %0A-%250A%0A+%25250A%0A outra = %0A@@ -451,17 +451,19 @@%0A  = towel%0A-%250A%0A+%25250A%0A towel.co%0A@@ -472,16 +472,22 @@%0A r = %0A-%2522%0A+%252522%0A white%0A-%2522%250A%0A+%252522%25250A%0A prin%0A@@ -500,17 +500,19 @@%0A l.color)%0A-%250A%0A+%25250A%0A print(to%0A@@ -520,17 +520,19 @@%0A el.size)%0A-%250A%0A+%25250A%0A print(to%0A@@ -544,8 +544,65 @@%0A etness)%250A%0A++@@ -142,16 +142,17 @@%25250A t__(self%25250A+)%25250A , color:%250A %25250A%250A\n %0A\n",
            "lines": "100"
        },
        {
            "label": "2025-09-16_20-19-33",
            "content": "@@ -166,17 +166,16 @@\n ze: str)\n-:\n  #Constu\n",
            "lines": "17"
        },
        {
            "label": "2025-09-16_20-19-46",
            "content": "@@ -291,119 +291,8 @@\n ut%0A%0A\n-%0A        def __str__ (self):%0A            return f%22color:%7Bself.color%7D, size%7Bself.size%7D, wetness%7Bself.wetness%7D%22%0A%0A\n #ref\n",
            "lines": "17"
        },
        {
            "label": "2025-09-16_20-22-47",
            "content": "@@ -174,17 +174,16 @@\n : #Const\n-r\n uctor %0A \n@@ -272,21 +272,16 @@\n .wetness\n-: int\n  = 0 #at\n@@ -291,370 +291,45 @@\n ut%0A%0A\n-def dry(self, amount: int) -%3E None:%0A    self.wetness += amount%0A    if self.wetness %3E= self.getMaxWetness():%0A        print(%22toalha encharcada%22)%0A        self.wetness = self.getMaxWetness()%0A    %0Adef getMaxWetness (self) -%3E int: %0A    if self.size == %22P%22%0A    return 10 %0A    if self.size == %22M%22%0A    return 20%0A    if self.size == %22G%22%0A    return 30%0A%0Adef __str__ (self):%0A\n+%0A        def __str__ (self):%0A        \n     \n@@ -398,17 +398,16 @@\n ness%7D%22%0A%0A\n-%0A\n #referen\n@@ -448,49 +448,84 @@\n ject\n- \n %0Atowe\n-r_cachorro(%22suja\n+l_2 = Towel (%22green\n %22, %22\n-M\n+P\n %22)\n+ \n #object\n-_test\n+ %0Aoutra = towel%0Atowel.color = %22white%22\n %0Apri\n@@ -579,9 +579,8 @@\n etness)%0A\n-%0A\n",
            "lines": "21"
        },
        {
            "label": "2025-09-22_18-59-20",
            "content": "@@ -542,17 +542,16 @@\n e == %22P%22\n-:\n %0A    ret\n@@ -581,17 +581,16 @@\n e == %22M%22\n-:\n %0A    ret\n@@ -619,17 +619,16 @@\n e == %22G%22\n-:\n %0A    ret\n",
            "lines": "34"
        },
        {
            "label": "2025-09-22_19-04-21",
            "content": "@@ -544,20 +544,16 @@\n == %22P%22:%0A\n-    \n     retu\n@@ -588,21 +588,16 @@\n M%22:%0A    \n-   \n-  \n return 2\n@@ -623,20 +623,16 @@\n == %22G%22:%0A\n-    \n     retu\n",
            "lines": "34"
        },
        {
            "label": "2025-09-22_19-04-35",
            "content": "@@ -785,16 +785,24 @@\n %22, %22G%22) \n+#object \n %0Atower_c\n@@ -808,24 +808,16 @@\n cachorro\n- = Towel\n (%22suja%22,\n@@ -821,16 +821,28 @@\n a%22, %22M%22)\n+#object_test\n %0Aprint(t\n",
            "lines": "34"
        },
        {
            "label": "2025-09-22_19-05-13",
            "content": "@@ -168,16 +168,29 @@\n : str): \n+#Constructor \n %0A       \n@@ -209,16 +209,25 @@\n = color \n+#atribut \n %0A       \n@@ -244,16 +244,24 @@\n  = size \n+#atribut\n %0A       \n@@ -281,18 +281,26 @@\n : int = \n- \n 0\n+ #atribut\n %0A%0Adef dr\n@@ -484,95 +484,8 @@\n s()%0A\n-%0Adelf isDry (self) -%3E bool:%0A    return self.wetness == 0%0A%0Adef wringOut(self) -%3E None:%0A%0A\n     \n@@ -745,23 +745,34 @@\n ness%7D%22%0A%0A\n-doguito\n+%0A#referencia%0Atowel\n  = Towel\n@@ -777,43 +777,56 @@\n el(%22\n-suja\n+blue\n %22, %22\n-M%22)%0Adoguito.dry(3)%0Adoguito.\n+G%22) %0Atower_cachorro = Towel(%22suja%22, %22M%22)\n %0Apri\n",
            "lines": "34"
        },
        {
            "label": "2025-09-22_19-18-12",
            "content": "@@ -445,16 +445,17 @@\n ss()%0A%0Ade\n+l\n f isDry \n@@ -909,38 +909,5 @@\n ss)%0A\n-print(str(doguito)+ %22est%C3%A1 velha%22)\n %0A\n",
            "lines": "39"
        },
        {
            "label": "2025-09-22_19-19-58",
            "content": "@@ -640,24 +640,25 @@\n M%22:%0A        \n+ \n return 20%0A  \n",
            "lines": "39"
        },
        {
            "label": "2025-09-22_19-20-15",
            "content": "@@ -452,16 +452,17 @@\n ef isDry\n+ \n (self) -\n",
            "lines": "39"
        },
        {
            "label": "2025-09-22_19-21-43",
            "content": "@@ -529,29 +529,8 @@\n one:\n-%0A    self.wetness = 0\n %0A%0A  \n",
            "lines": "39"
        },
        {
            "label": "2025-09-22_19-22-23",
            "content": "@@ -856,16 +856,25 @@\n .dry(3)%0A\n+doguito.%0A\n print(to\n",
            "lines": "40"
        },
        {
            "label": "2025-09-22_19-22-36",
            "content": "@@ -841,16 +841,31 @@\n %22, %22M%22)%0A\n+doguito.dry(3)%0A\n print(to\n",
            "lines": "39"
        },
        {
            "label": "2025-09-22_19-22-56",
            "content": "@@ -847,23 +847,21 @@\n )%0Aprint(\n-doguito\n+towel\n .color)%0A\n@@ -866,23 +866,21 @@\n )%0Aprint(\n-doguito\n+towel\n .size)%0Ap\n@@ -884,23 +884,21 @@\n )%0Aprint(\n-doguito\n+towel\n .wetness\n",
            "lines": "38"
        },
        {
            "label": "2025-09-22_19-23-28",
            "content": "@@ -1,8 +1,123 @@\n+# Criar a classe toalha com cor, tamanho e umidade%0A# Iniciar cor e tamanho com par%C3%A2metros definidos e umidade = 0%0A%0A\n class To\n@@ -817,29 +817,14 @@\n %22%0A%0Ad\n-ef main():%0A    toalha\n+oguito\n  = T\n@@ -833,490 +833,114 @@\n el(%22\n+suja\n %22, %22\n+M\n %22)%0A\n-    while True:%0A        line:str = input()%0A        line:list%5Bstr%5D =line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break %0A        elif args %5B0%5D == %22new%22:%0A            color = args%5B1%5D%0A            size = args%5B2%5D%0A            toalha = Towel(color, size)%0A        elif args%5B0%5D == %22show%22%0A            print(toalha)%0A        elif args%5B0%5D== %22dry%22:%0A            amount: int = (args%5B1%5D)%0A            toalha.dry(amount)%0A        else:%0A            print:(%22fail:comando inv%C3%A1lido%22)%0A%0Amain(\n+print(doguito.color)%0Aprint(doguito.size)%0Aprint(doguito.wetness)%0Aprint(str(doguito)+ %22est%C3%A1 velha%22\n )%0A\n",
            "lines": "38"
        },
        {
            "label": "2025-09-22_20-13-23",
            "content": "@@ -1025,17 +1025,16 @@\n = %22show%22\n-:\n %0A       \n",
            "lines": "51"
        },
        {
            "label": "2025-09-22_20-13-43",
            "content": "@@ -1025,16 +1025,17 @@\n = %22show%22\n+:\n %0A       \n@@ -1220,133 +1220,4 @@\n n()%0A\n-%0A%0A%0Adoguito = Towel(%22suja%22, %22M%22)%0Aprint(doguito.color)%0Aprint(doguito.size)%0Aprint(doguito.wetness)%0Aprint(str(doguito)+ %22est%C3%A1 velha%22)\n",
            "lines": "51"
        },
        {
            "label": "2025-09-22_20-14-18",
            "content": "@@ -1025,17 +1025,16 @@\n = %22show%22\n-:\n %0A       \n@@ -1215,8 +1215,137 @@\n %0Amain()%0A\n+%0A%0A%0Adoguito = Towel(%22suja%22, %22M%22)%0Aprint(doguito.color)%0Aprint(doguito.size)%0Aprint(doguito.wetness)%0Aprint(str(doguito)+ %22est%C3%A1 velha%22)\n",
            "lines": "59"
        },
        {
            "label": "2025-09-22_20-14-33",
            "content": "@@ -803,17 +803,16 @@\n t%5Bstr%5D =\n- \n line.spl\n",
            "lines": "51"
        },
        {
            "label": "2025-09-22_20-14-54",
            "content": "@@ -765,17 +765,16 @@\n    line:\n- \n str = in\n",
            "lines": "51"
        },
        {
            "label": "2025-09-22_20-15-31",
            "content": "class Towel:\n    def __init__(self, color: str, size: str): \n        self.color = color \n        self.size = size \n        self.wetness: int =  0\n\ndef dry(self, amount: int) -> None:\n    self.wetness += amount\n    if self.wetness >= self.getMaxWetness():\n        print(\"toalha encharcada\")\n        self.wetness = self.getMaxWetness()\n\ndef isDry(self) -> bool:\n    return self.wetness == 0\n\ndef wringOut(self) -> None:\n    self.wetness = 0\n\n    \ndef getMaxWetness (self) -> int: \n    if self.size == \"P\":\n        return 10 \n    if self.size == \"M\":\n        return 20\n    if self.size == \"G\":\n        return 30\n\ndef __str__ (self):\n    return f\"color:{self.color}, size{self.size}, wetness{self.wetness}\"\n\ndef main():\n    toalha = Towel(\"\", \"\")\n    while True:\n        line: str = input()\n        line:list[str] = line.split(\" \")\n\n        if args[0] == \"end\":\n            break \n        elif args [0] == \"new\":\n            color = args[1]\n            size = args[2]\n            toalha = Towel(color, size)\n        elif args[0] == \"show\":\n            print(toalha)\n        elif args[0]== \"dry\":\n            amount: int = (args[1])\n            toalha.dry(amount)\n        else:\n            print:(\"fail:comando inv\u00e1lido\")\n\nmain()\n",
            "lines": "51"
        }
    ]
}